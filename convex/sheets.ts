"use node";
import {
  GoogleSpreadsheet,
  GoogleSpreadsheetCell,
  GoogleSpreadsheetWorksheet,
} from "google-spreadsheet";
import { JWT } from "google-auth-library";

// the params is going to be an 2d array of values with i=0 being the header and i=1 being the values
export async function update_sheet(
  stats: string[][],
  title: string
): Promise<void> {
  // Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
  const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL as string,
    key: process.env.GOOGLE_PRIVATE_KEY as string,
    scopes: ["https://www.googleapis.com/auth/spreadsheets"],
  });

  const doc = new GoogleSpreadsheet(
    process.env.GOOGLE_SPREADSHEET_ID as string,
    serviceAccountAuth
  );

  await doc.loadInfo(); // loads document properties and worksheets

  // removing the 2, 3, 4nd pts column as it is a duplicate from all the other columns
  for (let i = 0; i < stats.length; i++) {
    stats[i].splice(1, 3);
  }

  stats[0][stats[0].length - 6] = "Plus/Minus";

  try {
    // create a new sheet
    const sheet = await doc.addSheet({
      headerValues: stats[0],
      title: title,
    });

    // add the values
    for (let i = 1; i < stats.length; i++) {
      await sheet.addRow(stats[i]);
    }

    // save it
    await sheet.saveUpdatedCells();
  } catch (error) {
    console.log(error);
  }
}
